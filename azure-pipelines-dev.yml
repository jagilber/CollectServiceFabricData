# used for internal ado builds

name: ADO CI CollectSFData

trigger:
  branches:
    include:
    - 'dev*'

pool:
  vmImage: 'windows-latest'

variables:
  project_name: CollectSFData
  project_root: .\src
  start_time: $[format('{0}-{1:yyyy}{1:MM}{1:dd}-{1:HH}{1:mm}{1:ss}', variables['project_name'], pipeline.startTime)]
  System.Debug: false
  buildConfiguration: Release
  Codeql.PublishDatabaseLog: true
  # testing
  Codeql.Cadence: 0
  Codeql.LogLevel: 4
  Codeql.Language: csharp,powershell
  Codeql.PublishDatabase: true

steps:
- task: PowerShell@2
  displayName: 'agent environment'
  inputs:
    targetType: 'inline'
    script: |
      [environment]::getEnvironmentVariables().getEnumerator()|sort Name
      dotnet --info
      dotnet nuget locals all --clear
    errorActionPreference: 'continue'
    verbosePreference: 'continue'
    debugPreference: 'continue'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(project_root)/$(project_name).sln'
    feedsToUse: 'config'
    nugetConfigPath: './nuget.config'
    noCache: false
    verbosityRestore: 'Normal'

- task: CodeQL3000Init@0
  inputs:
    Enabled: true
    AnalyzeInPipeline: true

- task: PowerShell@2
  displayName: 'dotnet build'
  inputs:
    targetType: 'inline'
    script: |
      write-host "dotnet build `"$env:project_root\$env:project_name\$env:project_name.csproj`" -v normal -c $env:buildConfiguration"
      dotnet build "$env:project_root\$env:project_name\$env:project_name.csproj" -v normal -c $env:buildConfiguration
    errorActionPreference: 'continue'
    verbosePreference: 'continue'
    debugPreference: 'continue'

- task: ManifestGeneratorTask@0
  inputs:
    BuildDropPath: $(System.DefaultWorkingDirectory)/src/bin/$(buildConfiguration)
    Verbosity: 'Warning'
    PackageName: CollectSFData

- task: CodeQL3000Finalize@0
  condition: always()
  continueOnError: true

- task: CredScan@3
  inputs:
    verboseOutput: true

- task: AntiMalware@4
  inputs:
    InputType: 'Basic'
    ScanType: 'CustomScan'
    FileDirPath: '$(Build.StagingDirectory)'
    TreatSignatureUpdateFailureAs: 'Warning'
    SignatureFreshness: 'UpToDate'
    TreatStaleSignatureAs: 'Error'

- task: ComponentGovernanceComponentDetection@0
  inputs:
    scanType: Register
    verbosity: Verbose
    alertWarningLevel: High

- task: PowerShell@2
  displayName: 'dotnet build output'
  inputs:
    targetType: 'inline'
    script: dir .. -recurse
    errorActionPreference: 'continue'
    verbosePreference: 'continue'
    debugPreference: 'continue'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath:  $(System.DefaultWorkingDirectory)/src/bin/$(buildConfiguration)
    artifactName: build-$(start_time)-$(system.JobId)

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.ArtifactsDirectory)
    artifactName: artifacts-$(start_time)-$(system.JobId)

